AWSTemplateFormatVersion: "2010-09-09"
Description: Creates a static website using S3

# input parameters of the template
Parameters:
  WebsiteBucketName:
    Type: String
    Description: The name for the bucket hosting your website
    Default: skiagenda

Resources:
  # web site
  Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref WebsiteBucketName
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      Tags: 
        - Key: "app"
          Value: "skiagenda"

  WebsiteBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub "arn:aws:s3:::${Bucket}/*"
  
  WebsiteDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        #Aliases:
        #- mysite.example.com
        #CacheBehaviors: 
        #- ...
        #CNAMEs:
        #Comment:
        #ContinuousDeploymentPolicyId:
        CustomErrorResponses:
        - #ErrorCachingMinTTL: Double
          ErrorCode: 403
          ResponseCode: 403
          ResponsePagePath: /error.html
        #CustomOrigin:
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          - OPTIONS
          - PUT
          - POST
          - PATCH
          - DELETE
          #CachedMethods:
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          Compress: true
          #DefaultTTL:
          #FieldLevelEncryptionId:
          #ForwardedValues: # deprecated, use a cache policy instead
            #QueryString: false
            #Cookies:
              #Forward: none
          #FunctionAssociations:
          #LambdaFunctionAssociations:
          #MaxTTL: # deprecated
          #MinTTL: # deprecated
          #OriginRequestPolicyId:
          #RealtimeLogConfigArn: String
          #ResponseHeadersPolicyId: String
          #SmoothStreaming: Boolean
          TargetOriginId: WebsiteOriginId
          #TrustedKeyGroups: 
          #- String
          #TrustedSigners:
          #- String
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        #Logging:
          #IncludeCookies: false
          #Bucket: mylogs.s3.amazonaws.com
          #Prefix: myprefix
          #OriginGroups: 
            #OriginGroups
        Origins:
        - #ConnectionAttempts: Integer
          #ConnectionTimeout: Integer
          #CustomOriginConfig: 
            #CustomOriginConfig
          #DomainName: String
          DomainName: skiagenda-test.s3.us-east-1.amazonaws.com
          Id: WebsiteOriginId
          #OriginAccessControlId: String
          #OriginCustomHeaders: 
          #- OriginCustomHeader
          #OriginPath: String
          #OriginShield: 
            #OriginShield
          S3OriginConfig: 
            OriginAccessIdentity: ''
        PriceClass: PriceClass_All
        #Restrictions: 
          #Restrictions
        #S3Origin: 
          #LegacyS3Origin
        #Staging: Boolean
        #ViewerCertificate: 
          #ViewerCertificate
        ViewerCertificate:
          #AcmCertificateArn: String
          CloudFrontDefaultCertificate: true
          #IamCertificateId: String
          #MinimumProtocolVersion: String
          #SslSupportMethod: String
        #WebACLId: String
      Tags: 
        - Key: "app"
          Value: "skiagenda"

Outputs:
  websiteURL:
    Value: !GetAtt WebsiteDistribution.DomainName
  cloudFrontId:
    Value: !GetAtt WebsiteDistribution.Id
